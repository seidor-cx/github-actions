name: PR Scann Code SAP Commerce  ob PR
on:
  workflow_call:
    inputs:
      DOCKER_IMAGE:
        description: 'Docker image to use'
        type: string
        required: true
      SONAR_TOKEN:
        description: 'Sonarqube token'
        type: string
        required: true
      SONAR_URL:
        description: 'URL for sonarqube'
        type: string
        required: true
      PR_IID:
        description: 'Merge request ID'
        type: string
        required: false
      SOURCE_BRANCH_NAME:
        description: 'Merge request source branch name'
        type: string
        required: false
      TARGET_BRANCH_NAME:
        description: 'Merge request target branch name'
        type: string
        required: false
      SONAR_PROPERTIES_FILE:
        description: 'Sonarqube properties file'
        type: string
        required: false
      WORKDIR:
        description: 'Working directory'
        type: string
        required: false
        default: '/opt/cxcommerce/custom-cx'
      CUSTOM_MODULES_DIR:
        description: 'Custom modules to scan'
        type: string
        required: false
        default: "core-customize/hybris/bin/custom"
      ENVIRONMENT:
        description: 'Environment to scan'
        type: string
        required: false
        default: 'ci'
      MYSQL_ROOT_PASSWORD:
        description: 'MYSQL_ROOT_PASSWORD'
        type: string
        required: false
        default: 'admin'
      MYSQL_DATABASE:
        description: 'MYSQL_DATABASE'
        type: string
        required: false
        default: 'commerce'
      MYSQL_USER:
        description: 'MYSQL_USER'
        type: string
        required: false
        default: 'hybris'
      MYSQL_PASSWORD:
        description: 'MYSQL_PASSWORD'
        type: string
        required: false
        default: 'hybris'

jobs:
  build_and_scann_pull_request:
    runs-on: 'k8s-ci'
    container:
      image: ${{ inputs.DOCKER_IMAGE }}
      env:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
        SONAR_URL: ${{ inputs.SONAR_URL }}
        PR_IID: ${{ inputs.PR_IID }}
        SOURCE_BRANCH_NAME: ${{ inputs.SOURCE_BRANCH_NAME }}
        TARGET_BRANCH_NAME: ${{ inputs.TARGET_BRANCH_NAME }}
        SONAR_PROPERTIES_FILE: ${{ inputs.SONAR_PROPERTIES_FILE }}
        WORKDIR: ${{ inputs.WORKDIR }}
        CUSTOM_MODULES_DIR: ${{ inputs.CUSTOM_MODULES_DIR }}
        ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ inputs.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ inputs.MYSQL_DATABASE }}
          MYSQL_USER: ${{ inputs.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ inputs.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
    steps:
    - uses: actions/checkout@v4.1.1
      with:
        path: custom-cx
    - name: Copy Repo files to Container WORKDIR
      run: |
            cp -ra $GITHUB_WORKSPACE/custom-cx/. ${{ inputs.WORKDIR }}
    - name: build SAP Commerce
      uses: seidor-cx/github-actions/cxcommerce-build@main
      with:
        INITIALIZE: "0"
        ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
        CUSTOM_DIR: ${{ inputs.WORKDIR }}
    - name: Exec Unit Test
      uses: seidor-cx/github-actions/cxcommerce-junit@main
      with:
        CUSTOM_MODULES_DIR: ${{ inputs.CUSTOM_MODULES_DIR }}
        CUSTOM_DIR: ${{ inputs.WORKDIR }}
    - name: Publish Junit Test Results as Github artifact
      uses: mikepenz/action-junit-report@v4
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: /opt/cxcommerce/hybris/log/junit/*.xml
    - name: Exec Sonnar Scanner
      uses: seidor-cx/github-actions/sonar-scanner@main
      with:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
        SONAR_URL: ${{ inputs.SONAR_URL }}
        SONAR_PROPERTIES_FILE: ${{ inputs.SONAR_PROPERTIES_FILE }}
        WORKDIR: ${{ inputs.WORKDIR }}
        PR_IID: ${{ inputs.PR_IID }}
        PR_SOURCE_BRANCH_NAME: ${{ inputs.SOURCE_BRANCH_NAME }}
        PR_TARGET_BRANCH_NAME: ${{ inputs.TARGET_BRANCH_NAME }}