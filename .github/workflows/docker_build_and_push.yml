name: Build and push Container Image on Github registry
on:
  workflow_call:
    inputs:
      BUILD_ARGS:
        type: string
        description: 'Extra arguments to pass to kaniko'
        required: false
      IMAGE:
        type: string
        description: 'Image name to use'
        required: false
      TAG:
        type: string
        description: 'Tag to use'
        required: false
      CONTEXT:
        type: string
        description: 'Context to use'
        required: false
        default: .
      DOCKERFILE:
        type: string
        description: 'Dockerfile to use'
        required: false
        default: Dockerfile

jobs:
  build:
    runs-on: 'k8s-ci'
    steps:
    - uses: actions/checkout@v4.1.1
    - name: Set Tag Value
      id: set_tag_value
      run: |
            TAG=$(echo ${{ inputs.TAG }})
            if [ -z "${TAG}" ]; then
              TAG=$(grep -i "version" ${{ inputs.CONTEXT }}/${{ inputs.DOCKERFILE }} |cut -d '=' -f2|cut -d '"' -f2)
            fi
            if [ -z "${TAG}" ]; then
              TAG=$(echo ${{ github.sha }})
            fi
            echo TAG=$TAG
            echo "TAG=$TAG" >> $GITHUB_OUTPUT
    - name: Set Image Name Value
      id: set_image_value
      run: |
            IMAGE=$(echo ${{ inputs.IMAGE }})
            if [ -z "$IMAGE" ]; then
              IMAGE=$(grep -i "name" ${{ inputs.CONTEXT }}/${{ inputs.DOCKERFILE }} |cut -d '=' -f2|cut -d '"' -f2)
            fi
            if [ -z "$IMAGE" ]; then
              IMAGE=$(echo $GITHUB_REPOSITORY | cut -d '/' -f2)
            fi
            echo IMAGE=$IMAGE
            echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT
    - name: Set BUILD_ARGS Value
      id: set_BUILD_ARGS_value
      run: |
            build_args="$(echo ${{ inputs.BUILD_ARGS }}|awk '{print $1}')"
            for arg in $(echo ${{ inputs.BUILD_ARGS }}|awk '{for(i=2;i<=NF;i++)print $i}')
            do
              build_args="$build_args --build-arg $arg\"
            done
            echo "BUILD_ARGS=$build_args"
            echo "BUILD_ARGS=$build_args" >> $GITHUB_OUTPUT
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        images: |
          name/app
          ghcr.io/username/app
        # generate Docker tags based on the following events/attributes
        tags: ghcr.io/${{ github.repository }}/${{ steps.set_image_value.outputs.IMAGE }}:${{ steps.set_tag_value.outputs.TAG }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Container
      id: build-job
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.CONTEXT }}
        file: ${{ inputs.CONTEXT }}/${{ inputs.DOCKERFILE }}
        push: true
        tags: |
              ghcr.io/${{ github.repository }}/${{ steps.set_image_value.outputs.IMAGE }}:${{ steps.set_tag_value.outputs.TAG }} 
              ghcr.io/${{ github.repository }}/${{ steps.set_image_value.outputs.IMAGE }}:latest 
        build-args: ${{ steps.set_BUILD_ARGS_value.outputs.BUILD_ARGS }}